DIM grid(21, 21)
var allPieces = [[1, 0, 1, 1, 1, 2, 0, 2], [1, 0, 1, 1, 2, 1, 2, 2], [1, 0, 1, 1, 1, 2, 2, 2], [2, 0, 2, 1, 1, 1, 1, 2], [1, 0, 0, 1, 1, 1, 2, 1], [1, 0, 2, 0, 1, 1, 2, 1], [2, 0, 2, 1, 2, 2, 2, 3]]
var pc = 0
var pp = 0
var p = screen.newPen()
DIM pieceX(4)
DIM pieceY(4)
DIM previewX(4)
DIM previewY(4)
var px0 = 1
var py0 = 0
var score = 0
var rows = 0
var gameOver = false

def checkPosition(x: float, y: float) -> bool:
 for i in range(4):
  if grid[x + pieceX[i]][y + pieceY[i]] != 0 :
    return False
  end
 end
 return True
end

def drawScore():
 p.fillColor = 0xff888888
 p.clear 40, -10, 60, 60
 p.write 40, 40, "Rows:"
 p.write 40, 30, "" + rows + "  "
 p.write 40, 10, "Score:"
 p.write 40, 0, "" + score + "  "
 p.strokeColor = 0
end

def setColor(c: float):
 # Store in array?
 if c == 1 :
   p.fillColor = 0xff0000ff # blue J
 elif c == 2 :
   p.fillColor = 0xff00ff00 # green S
 elif c == 3 :
   p.fillColor = 0xffff8800 # orange L
 elif c == 4 :
   p.fillColor = 0xffff0000 # red Z
 elif c == 5 :
   p.fillColor = 0xffff00ff # violet T
 elif c == 6 :
   p.fillColor = 0xffeeee00 # yellow O
 elif c == 7 :
   p.fillColor = 0xff00ffff # cyan I
 elif c == 8 :
   p.fillColor = 0xff888888 # border
 end
end

def drawPiece():
 setColor pc
 for i in range(4):
  let x = px0 + pieceX[i]
  let y = py0 + pieceY[i]
  grid[x][y] = pc
  p.rect x * 8 - 69, 91 - y * 8, 7, 7
 end
end

def erasePiece():
 for i in range(4):
   let x = px0 + pieceX[i]
   let y = py0 + pieceY[i]
   grid[x][y] = 0
   p.clear x * 8 - 70, 90 - y * 8, 8, 8
 end
end

def definePiece():
 for i in range(4):
   pieceX[i] = allPieces(pc - 1, i * 2)
   pieceY[i] = allPieces(pc - 1, i * 2 + 1)
 end
end

def drawAll():
 for y in range(21):
  for x in range(1, 13):
    var c = grid[x][y]
    if c != 0:
      setColor c
      p.rect x * 8 - 69, 91 - y * 8, 7, 7
    elif c == 0:
      p.clear x * 8 - 70, 90 - y * 8, 8, 8
    end
  end
 end
end

def dropGrid(cy: float):
 for x in range(2, 12):
   for y in range(1, cy):
     # used to be from cy down to 2
     grid[x][cy-y] = grid[x][cy-y -1]
   end
 end
 drawAll
end

def checkGrid():
 var dropCount = 0
 for cy in range(20):
   var row = 0
   for x in range(2, 12):
     if grid[x][cy] != 0 :
       row = row + 1
     end
   end
   if row = 10 :
     dropGrid cy
     dropCount = dropCount + 1
   end
 end
 score = score + dropCount * dropCount * 10
 rows = rows + dropCount
end

def newPiece():
 checkGrid
 drawScore
 # preview stuff
 px0 = 14
 py0 = 1
 pc = pp
 definePiece
 erasePiece
 var savePc = pc
 pp = int(random() * 7) + 1
 pc = pp
 definePiece
 drawPiece
 pc = savePc
 definePiece
 px0 = 5
 py0 = 0
 if not checkPosition(px0, py0):
   gameOver = true
 end
end

def moveRight():
 erasePiece
 if checkPosition(px0 + 1, py0) :
   px0 = px0 + 1
 end
 drawPiece
end

def moveLeft():
 erasePiece
 if checkPosition(px0 - 1, py0) :
   px0 = px0 - 1
 end
 drawPiece
end

def moveDown():
 erasePiece
 var ok = checkPosition(px0, py0 + 1)
 if ok :
   py0 = py0 + 1
 end
 drawPiece
 if not ok :
   newPiece()
   drawPiece()
 end
end

def rotate():
 erasePiece
 var mx = 2
 if pc > 5:
   mx = 3
 end
 for i in range(4):
  var x = piece[i]
  pieceX[i] = mx - pieceY[i]
  pieceY[i] = x
 end
 if checkPosition(px0, py0) :
   drawPiece
   return
 end
 for i in range(4):
   var x = pieceX[i]
   pieceX[i] = pieceY[i]
   pieceY[i] = mx - x
 end
 drawPiece
end

def main():
 while True:
  cls
  # Based on David Murray's code, see
  # http://www.the8bitguy.com/download-davids-software/
  gameOver = false
  dpad.visible = true
  p.strokeColor = 0
  pp = 1

  for i in range(21):
   grid[1][i] = 8
   grid[12][i] = 8
   for j in range(2, 12):
     grid[j][i] = 0
   end
  end

  for i in range(1, 13):
   grid[i][20] = 8
  end

  drawAll
  newPiece
  newPiece
  drawPiece
  var timer = 0

  while not gameover:

   if dpad.left : moveLeft; end
   if dpad.right : moveRight; end
   if dpad.down or timer == 10 :
     moveDown
     timer = 0
   end
   if dpad.up :
     rotate
   end
   timer = timer + 1

   sleep 100
  end
  p.fillColor = 0xff888888
  p.write -40, 40, "GAME OVER"
  sleep 4000
  p.write -40, 20, "Press any key"
  while not (dpad.fire or dpad.left or dpad.right or dpad.up or dpad.down):
   sleep 100
  end
 end
end