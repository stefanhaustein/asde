DIM allPieces(7, 8)
DIM grid(21, 21)
LET pc = 0
LET pp = 0
LET pen = screen.createPen()
DIM pieceX(4)
DIM pieceY(4)
DIM previewX(4)
DIM previewY(4)
LET px0 = 1
LET py0 = 0
LET score = 0
LET rows = 0
LET gameover = 0

FUNCTION checkposition(Number x, Number y) -> Number
100 FOR i = 0 TO 3
110   IF grid(x + piecex(i), y + piecey(i)) <> 0 THEN RETURN 0
120 NEXT i
130 RETURN 1
END FUNCTION

SUB drawscore()
100 pen.fillcolor = #ff888888
110 pen.clear 40, -10, 60, 60
120 pen.write 40, 40, "Rows:"
130 pen.write 40, 30, "" + rows + "  "
140 pen.write 40, 10, "Score:"
150 pen.write 40, 0, "" + score + "  "
160 pen.strokecolor = 0
END SUB

SUB setcolor(Number c)
5 REM Store in array?
10 if c = 1 then pen.fillcolor = #ff0000ff : REM blue J
20 if c = 2 then pen.fillcolor = #ff00ff00 : REM green S
30 if c = 3 then pen.fillcolor = #ffff8800 : REM orange L
40 if c = 4 then pen.fillcolor = #ffff0000 : REM red Z
50 if c = 5 then pen.fillcolor = #ffff00ff : REM violet T
60 if c = 6 then pen.fillcolor = #ffeeee00 : REM yellow O
70 if c = 7 then pen.fillcolor = #ff00ffff : REM cyan I
80 if c = 8 then pen.fillcolor = #ff888888 : REM border
END SUB

SUB drawpiece()
100 setcolor pc
110 FOR i = 0 TO 3
120  LET x = px0 + piecex(i)
130  LET y = py0 + piecey(i)
140  grid(X,Y) = pc
150  pen.rect x * 8 - 69, 91 - y * 8, 7, 7
160 NEXT i
END SUB

SUB erasepiece()
100 FOR i = 0 TO 3
110   LET x = px0 + piecex(i)
120   LET y = py0 + piecey(i)
130   grid(x, y) = 0
140   pen.clear x * 8 - 70, 90 - y * 8, 8, 8
150 NEXT i
END SUB

SUB definepiece()
210 FOR i = 0 TO 3
220   piecex(i) = allPieces(pc - 1, i * 2)
230   piecey(i) = allPieces(pc - 1, i * 2 + 1)
240 NEXT i
END SUB

SUB drawall()
100 FOR y = 0 to 20
120  FOR x = 1 to 12
130    LET c = grid(x, y)
140    IF c THEN setcolor c  : pen.rect x * 8 - 69, 91 - y * 8, 7, 7
145    IF c = 0 THEN pen.clear x * 8 - 70, 90 - y * 8, 8, 8
150  NEXT x
160 NEXT y
END SUB

SUB dropgrid(Number cy)
100 for x = 2 to 11
110   for y = cy to 2 step -1
120     grid(x, y) = grid(x, y -1)
130   next y
140 next x
150 drawall
END SUB

SUB checkgrid()
100 LET dropcount = 0
110 FOR cy = 0 to 19
120   LET row = 0
130   FOR x = 2 to 11
140     IF grid(x,cy) <> 0 then ROW = ROW + 1
150   NEXT x
160   IF row = 10 then dropgrid cy : dropcount = dropcount + 1
170 next cy
180 score = score + dropcount * dropcount * 10
190 rows = rows + dropcount
END SUB

SUB newpiece()
10 checkgrid
20 drawscore
90 rem preview stuff
100 px0 = 14
110 py0 = 1
120 pc = pp
125 definepiece
130 erasepiece
140 LET savepc = pc
200 PP = int(rnd() * 7) + 1
210 PC = PP
220 definepiece
230 drawpiece
240 PC = savepc
250 definepiece
260 px0 = 5
270 py0 = 0
280 if checkposition(px0, py0) = 0 then gameover = 1 : pen.fillcolor = #ff888888 : pen.write -40, 40, "GAME OVER"
END SUB

SUB moveright()
110 erasepiece
120 if checkposition(px0 + 1, py0) then px0 = px0 + 1
130 drawpiece
END SUB

SUB moveleft()
110 erasepiece
120 if checkposition(px0 - 1, py0) then px0 = px0 - 1
130 drawpiece
END SUB

SUB movedown()
110 erasepiece
120 LET ok = checkposition(px0, py0 + 1)
125 IF ok THEN py0 = py0 + 1
130 drawpiece
140 IF ok = 0 THEN newpiece() : drawpiece()
END SUB

SUB rotate()
100 erasepiece
105 LET mx = 2
107 IF pc > 5 THEN mx = 3
110 FOR i = 0 to 3
120  LET x = piecex(i)
130  piecex(i) = mx - piecey(i)
140  piecey(i) = x
150 NEXT i
160 if checkposition(px0, py0) then drawpiece() : RETURN 0
200 FOR j = 0 to 3
210   LET xx = piecex(j)
220   piecex(j) = piecey(j)
230   piecey(j) = mx - xx
240 NEXT j
END SUB

100 cls
110 REM Based on David Murray's code, see
120 REM http://www.the8bitguy.com/download-davids-software/
130 dpad.visible = 1
140 pen.strokecolor = 0
150 PP = 1

200 rem Piece data: J, S, L, Z, T, O, I
210 data 1, 0, 1, 1, 1, 2, 0, 2
220 data 1, 0, 1, 1, 2, 1, 2, 2
230 data 1, 0, 1, 1, 1, 2, 2, 2
240 data 2, 0, 2, 1, 1, 1, 1, 2
250 data 1, 0, 0, 1, 1, 1, 2, 1
260 data 1, 0, 2, 0, 1, 1, 2, 1
270 data 2, 0, 2, 1, 2, 2, 2, 3

300 for p = 0 to 6
310   for i = 0 to 7
320     read allPieces(p, i)
330   next i
340 next p

400 for i = 0 to 20
410   grid(1, i) = 8
420   grid(12, i) = 8
430 next i

450 for i = 1 to 12
460   grid(i, 20) = 8
470 next i

500 drawall
510 newPiece
520 newPiece
530 drawpiece
540 let timer = 0

600 if dpad.left then moveleft
610 if dpad.right then moveright
620 if dpad.down or timer = 10 then movedown : timer = 0
630 if dpad.up then rotate
640 timer = timer + 1

680 pause 100
690 if gameover = 0 then goto 600